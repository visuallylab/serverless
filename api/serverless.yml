service: api

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1
  apiKeys:
    - ${file(../serverless.env.yml):${opt:stage, self:provider.stage}.API_KEY}
  iamRoleStatements:
    - Effect: 'Allow'
      Action: sns:Publish
      Sid: VisualEditor0
      Resource:
        - "*"
        - "arn:aws:sns:*:*:*"

package:
  exclude:
    - node_modules/**/README.*
    - node_modules/**/test/**
    - node_modules/aws-sdk/** # aws-sdk is in lambda's envrionment

functions:
  auth-sendSMSToken:
    handler: auth/sendSMSToken.sendSMSToken
    events:
      - http:
          path: ${self:service}/v1/auth/sendSMSToken
          method: post
          private: true

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2